<!DOCTYPE html>
<html lang="mr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>अनिक फायनान्सीयल सर्वीसेस - दैनंदिन अपडेट</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Devanagari:wght@400;500;700&display=swap');

        :root {
            --primary-color: #0056b3; /* Dark Blue */
            --secondary-color: #007bff; /* Lighter Blue */
            --accent-color: #28a745; /* Green for success/add */
            --info-color: #17a2b8; /* Teal for info */
            --light-gray: #f8f9fa;
            --medium-gray: #e9ecef;
            --dark-gray: #343a40;
            --text-color: #212529;
            --border-radius: 8px;
            --box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Noto Sans Devanagari', sans-serif;
            background-color: var(--light-gray);
            color: var(--text-color);
            line-height: 1.6;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .container {
            background-color: #fff;
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            width: 100%;
            max-width: 900px; /* Increased width for better layout */
        }

        header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid var(--primary-color);
        }

        header h1 {
            color: var(--primary-color);
            font-size: 1.8em;
            margin-bottom: 5px;
        }

        header h2 {
            color: var(--secondary-color);
            font-size: 1.4em;
            font-weight: 500;
        }

        .form-section-title {
            font-size: 1.3em;
            color: var(--primary-color);
            margin-top: 30px;
            margin-bottom: 15px;
            padding-bottom: 8px;
            border-bottom: 1px solid var(--medium-gray);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 8px;
            color: var(--dark-gray);
        }

        .form-group input[type="text"],
        .form-group input[type="tel"],
        .form-group input[type="number"],
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--medium-gray);
            border-radius: var(--border-radius);
            font-size: 1em;
            font-family: 'Noto Sans Devanagari', sans-serif;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-group input[type="text"]:focus,
        .form-group input[type="tel"]:focus,
        .form-group input[type="number"]:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(0, 86, 179, 0.25);
            outline: none;
        }

        .form-group textarea {
            min-height: 80px; /* Adjusted height */
            resize: vertical;
        }

        .button-group {
            margin-top: 30px;
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: flex-start; /* Align buttons to start */
        }

        .btn {
            padding: 12px 25px;
            font-size: 1em;
            font-weight: 500;
            border-radius: var(--border-radius);
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            font-family: 'Noto Sans Devanagari', sans-serif;
            text-align: center;
        }

        .btn:hover {
            transform: translateY(-2px);
        }
        
        .btn-add-to-list {
            background-color: var(--accent-color);
            color: #fff;
        }
        .btn-add-to-list:hover {
            background-color: #218838;
        }

        .btn-print {
            background-color: var(--secondary-color);
            color: #fff;
        }
        .btn-print:hover {
            background-color: #0069d9;
        }

        #addedBorrowersSection {
            margin-top: 30px;
            border-top: 1px solid var(--medium-gray);
            padding-top: 20px;
        }

        #addedBorrowersSection h3 {
            color: var(--info-color);
            margin-bottom: 15px;
        }

        #borrowersDisplayList {
            list-style: none;
            padding: 0;
        }
        #borrowersDisplayList li {
            background-color: var(--light-gray);
            padding: 10px 15px;
            border-radius: var(--border-radius);
            margin-bottom: 10px;
            border-left: 5px solid var(--info-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        #borrowersDisplayList li .borrower-info {
            font-size: 0.95em;
        }
        #borrowersDisplayList li .remove-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.8em;
        }
         #borrowersDisplayList li .remove-btn:hover {
            background-color: #c82333;
         }

        /* Print specific styles */
        #printArea {
            display: none; /* Hidden by default, shown only for printing */
        }

        @media print {
            body {
                padding: 0;
                background-color: #fff;
                font-size: 10pt; /* Smaller font for printing */
            }
            .container, #financialForm, #addedBorrowersSection, .button-group, header h1, header h2:not(.print-header-h2) {
                display: none !important; /* Hide main form and UI elements */
            }
            
            #printArea {
                display: block !important;
                margin: 0;
                padding: 1cm; /* Standard print margin */
                width: 100%;
            }

            .print-header {
                text-align: center;
                margin-bottom: 20px;
                border-bottom: 2px solid #000;
                padding-bottom: 10px;
            }
            .print-header h1 {
                display: block !important; /* Ensure these are visible */
                color: #000 !important;
                font-size: 16pt;
                margin-bottom: 5px;
            }
            .print-header-h2 {
                display: block !important; /* Ensure these are visible */
                color: #000 !important;
                font-size: 12pt;
                font-weight: normal;
            }
            .print-meta-info {
                display: flex;
                justify-content: space-between;
                font-size: 9pt;
                margin-bottom: 15px;
            }

            .print-borrower-entries-container {
                column-count: 2; /* Try 2 columns */
                column-gap: 15mm; /* Gap between columns */
                column-fill: auto; /* Balances content across columns */
            }

            .print-borrower-entry {
                page-break-inside: avoid; /* Crucial: try to keep each entry from breaking */
                border: 1px solid #ccc;
                padding: 8px;
                margin-bottom: 10px; /* Space between entries */
                background-color: #fff; /* Ensure background */
                font-size: 9pt;
            }
            .print-borrower-entry p {
                margin-bottom: 4px;
                line-height: 1.3;
            }
            .print-borrower-entry strong {
                font-weight: bold; /* Noto Sans Devanagari might need explicit bold */
            }
            
            @page {
                size: A4 portrait;
                margin: 1cm; /* Adjust margins for printing */
            }
        }

        /* Responsive adjustments */
        @media (max-width: 600px) {
            header h1 {
                font-size: 1.5em;
            }
            header h2 {
                font-size: 1.2em;
            }
            .container {
                padding: 20px;
            }
            .btn {
                width: 100%; 
            }
             .print-borrower-entries-container { /* Single column on very small screens if printed from there */
                column-count: 1;
            }
        }

    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>अनिक फायनान्सीयल सर्वीसेस प्रा.लि.</h1>
            <h2>केज युनिट - एफ एक्स दैनंदिन अपडेट</h2>
        </header>

        <form id="financialForm">
            <div class="form-group">
                <label for="employeeName">आपले नांव निवडा:</label>
                <select id="employeeName" name="employeeName" required>
                    <option value="" disabled selected>--- नांव निवडा ---</option>
                    <option value="सविता चाळक">सविता चाळक</option>
                    <option value="आशा कापसे">आशा कापसे</option>
                    <option value="अशोक बिक्कड">अशोक बिक्कड</option>
                    <option value="विरभद्र पोटभरे">विरभद्र पोटभरे</option>
                </select>
            </div>

            <h3 class="form-section-title">कर्जदाराची माहिती नोंदवा</h3>

            <div class="form-group">
                <label for="borrowerName">कर्जदाराचे नांव:</label>
                <input type="text" id="borrowerName" name="borrowerName" required>
            </div>

            <div class="form-group">
                <label for="villageName">गावाचे नांव:</label>
                <input type="text" id="villageName" name="villageName" required>
            </div>

            <div class="form-group">
                <label for="mobileNumber">मोबाईल नंबर:</label>
                <input type="tel" id="mobileNumber" name="mobileNumber" pattern="[0-9]{10}" placeholder="उदा. 9876543210" required>
            </div>

            <div class="form-group">
                <label for="accountNumber">खाते क्रमांक:</label>
                <input type="text" id="accountNumber" name="accountNumber" required>
            </div>

            <div class="form-group">
                <label for="discussionDetails">आपले त्यांचेशी काय बोलणे झाले ते नोंदवा:</label>
                <textarea id="discussionDetails" name="discussionDetails" rows="3" required></textarea>
            </div>

            <div class="form-group">
                <label for="recoveryPlan">सदरील खाते थकीत मधुन बाहेर काढण्यासाठी काय करणे गरजेचे आहे:</label>
                <textarea id="recoveryPlan" name="recoveryPlan" rows="3" required></textarea>
            </div>
            
            <div class="button-group">
                <button type="button" class="btn btn-add-to-list" onclick="addCurrentBorrowerToList()">हा कर्जदार यादीत जोडा</button>
                <button type="button" class="btn btn-print" onclick="prepareAndPrintData()">सर्व माहिती प्रिंट करा</button>
            </div>
        </form>

        <section id="addedBorrowersSection">
            <h3>जोडलेले कर्जदार</h3>
            <ul id="borrowersDisplayList">
                <!-- जोडलेले कर्जदार येथे दिसतील -->
            </ul>
        </section>
    </div>

    <div id="printArea">
        <!-- प्रिंटसाठी माहिती येथे तयार केली जाईल -->
    </div>

    <script>
        let allBorrowersData = []; // सर्व कर्जदारांचा डेटा साठवण्यासाठी अॅरे

        function validateForm() {
            const requiredFields = ["employeeName", "borrowerName", "villageName", "mobileNumber", "accountNumber", "discussionDetails", "recoveryPlan"];
            for (let fieldId of requiredFields) {
                const field = document.getElementById(fieldId);
                if (!field.value.trim()) {
                    alert(`कृपया '${field.labels[0].innerText.replace(':','')}' भरा.`);
                    field.focus();
                    return false;
                }
            }
            // मोबाईल नंबर व्हॅलिडेशन
            const mobileField = document.getElementById("mobileNumber");
            if (!/^[0-9]{10}$/.test(mobileField.value)) {
                alert("कृपया वैध १०-अंकी मोबाईल नंबर टाका.");
                mobileField.focus();
                return false;
            }
            return true;
        }

        function addCurrentBorrowerToList() {
            if (!validateForm()) {
                return;
            }

            const borrowerData = {
                borrowerName: document.getElementById("borrowerName").value.trim(),
                villageName: document.getElementById("villageName").value.trim(),
                mobileNumber: document.getElementById("mobileNumber").value.trim(),
                accountNumber: document.getElementById("accountNumber").value.trim(),
                discussionDetails: document.getElementById("discussionDetails").value.trim(),
                recoveryPlan: document.getElementById("recoveryPlan").value.trim(),
                id: Date.now() // Unique ID for removal
            };

            allBorrowersData.push(borrowerData);
            updateBorrowersDisplayList();
            clearBorrowerFormFields();
            document.getElementById("borrowerName").focus(); // Focus on the first field for next entry
        }

        function clearBorrowerFormFields() {
            const fieldsToClear = ["borrowerName", "villageName", "mobileNumber", "accountNumber", "discussionDetails", "recoveryPlan"];
            fieldsToClear.forEach(id => document.getElementById(id).value = "");
        }
        
        function removeBorrower(borrowerId) {
            allBorrowersData = allBorrowersData.filter(b => b.id !== borrowerId);
            updateBorrowersDisplayList();
        }

        function updateBorrowersDisplayList() {
            const listElement = document.getElementById("borrowersDisplayList");
            listElement.innerHTML = ""; // Clear existing list

            if (allBorrowersData.length === 0) {
                listElement.innerHTML = "<p>अद्याप कोणताही कर्जदार जोडलेला नाही.</p>";
                return;
            }

            allBorrowersData.forEach((borrower, index) => {
                const listItem = document.createElement("li");
                listItem.innerHTML = `
                    <span class="borrower-info">${index + 1}. ${borrower.borrowerName} (खाते क्र.: ${borrower.accountNumber})</span>
                    <button class="remove-btn" onclick="removeBorrower(${borrower.id})">काढा</button>
                `;
                listElement.appendChild(listItem);
            });
        }
        
        function getCurrentDateMarathi() {
            const date = new Date();
            const options = { day: 'numeric', month: 'long', year: 'numeric' };
            // Locale 'mr-IN' might not be supported everywhere for full month name, 
            // but browsers often fall back gracefully or have some support.
            // For guaranteed Marathi month names, a custom mapping would be needed.
            try {
                return date.toLocaleDateString('mr-IN', options);
            } catch (e) {
                // Fallback if 'mr-IN' is not supported
                return date.toLocaleDateString('en-IN', options);
            }
        }


        function prepareAndPrintData() {
            const employeeName = document.getElementById("employeeName").value;
            if (!employeeName) {
                alert("कृपया प्रथम आपले नांव निवडा.");
                document.getElementById("employeeName").focus();
                return;
            }
            if (allBorrowersData.length === 0) {
                alert("प्रिंट करण्यासाठी कोणताही कर्जदार डेटा जोडलेला नाही.");
                return;
            }

            const printArea = document.getElementById("printArea");
            printArea.innerHTML = ""; // Clear previous print content

            // 1. Create Header for Print
            const printHeader = document.createElement('div');
            printHeader.className = 'print-header';
            printHeader.innerHTML = `
                <h1>अनिक फायनान्सीयल सर्वीसेस प्रा.लि.</h1>
                <h2 class="print-header-h2">केज युनिट - एफ एक्स दैनंदिन अपडेट</h2>
            `;
            printArea.appendChild(printHeader);
            
            // Meta Info: Employee Name and Date
            const metaInfo = document.createElement('div');
            metaInfo.className = 'print-meta-info';
            metaInfo.innerHTML = `
                <span><strong>कर्मचारी:</strong> ${employeeName}</span>
                <span><strong>दिनांक:</strong> ${getCurrentDateMarathi()}</span>
            `;
            printArea.appendChild(metaInfo);


            // 2. Create container for borrower entries (this will have columns)
            const entriesContainer = document.createElement('div');
            entriesContainer.className = 'print-borrower-entries-container';

            // 3. Add each borrower's data
            allBorrowersData.forEach((borrower, index) => {
                const entryDiv = document.createElement('div');
                entryDiv.className = 'print-borrower-entry';
                entryDiv.innerHTML = `
                    <p><strong>क्र.:</strong> ${index + 1}</p>
                    <p><strong>कर्जदाराचे नांव:</strong> ${borrower.borrowerName}</p>
                    <p><strong>गावाचे नांव:</strong> ${borrower.villageName}</p>
                    <p><strong>मोबाईल नंबर:</strong> ${borrower.mobileNumber}</p>
                    <p><strong>खाते क्रमांक:</strong> ${borrower.accountNumber}</p>
                    <p><strong>झालेले बोलणे:</strong> ${borrower.discussionDetails.replace(/\n/g, '<br>')}</p>
                    <p><strong>उपाययोजना:</strong> ${borrower.recoveryPlan.replace(/\n/g, '<br>')}</p>
                `;
                entriesContainer.appendChild(entryDiv);
            });
            
            printArea.appendChild(entriesContainer);

            // 4. Trigger Print
            window.print();
        }
        
        // Initialize display list on page load
        document.addEventListener('DOMContentLoaded', updateBorrowersDisplayList);

    </script>
</body>
</html>
